{"version":3,"sources":["main.coffee"],"names":["expect","require","global","Promise","describe","did_run","it","pending_promise","later","to","equal","isFulfilled","resolve","then","value","reject","done","ended","expanding_all","setTimeout","delayed","promises","delay","push"],"mappings":"CACA,WAAA,GAAAA,EAAAA,GAASC,QAAQ,QAAQD,OACzBC,QAAQ,aAERC,OAAOC,QAAUF,QAAQ,YAEzBA,QAAQ,mBAERG,SAAS,aAAc,iBACtBA,UAAS,SAAU,WAClB,GAAAC,SAAAA,IAAU,EACVC,GAAG,uBAAwB,WAC1B,GAAAC,SAAAA,GAAkBJ,QAAQK,MAAM,iBAC/BH,IAAU,IACXL,EAAOK,GAASI,GAAGC,OAAM,KAE1BJ,GAAG,sBAAuB,WACzB,GAAAC,SAAAA,GAAkBJ,QAAQK,MAAM,cAChCR,EAAOO,EAAgBI,eAAeF,GAAGC,OAAM,KAEhDJ,GAAG,oBAAqB,WACvB,GAAAC,SAAAA,GAAkBJ,QAAQK,MAAM,cAChCD,EAAgBK,QAAQ,QACxBZ,EAAOO,EAAgBI,eAAeF,GAAGC,OAAM,KAIhDJ,GAAG,gCAAiC,WACnC,GAAAC,SAAAA,GAAkBJ,QAAQK,MAAM,cAChCD,EAAgBM,KAAK,SAACC,SACrBd,GAAOc,GAAOL,GAAGC,MAAM,UAExBH,EAAgBK,QAAQ,UAIzBN,GAAG,+BAAgC,WAClC,GAAAC,SAAAA,GAAkBJ,QAAQK,MAAM,cAChCD,EAAe,MAAO,SAACO,SACtBd,GAAOc,GAAOL,GAAGC,MAAM,UACxBH,EAAgBQ,OAAO,YAGzBX,SAAS,iBAAkB,iBAC1BE,IAAG,cAAe,SAACU,GAClB,GAAAC,SAAAA,IAAQ,EACRd,QAAQe,kBAAkBL,KAAK,iBAC9BI,IAAQ,IACTE,WAAW,iBACTnB,GAAOiB,GAAOR,GAAGC,OAAM,GACvBM,KACE,MAELV,GAAG,uBAAwB,SAACU,GAC3B,GAAAI,GAAAH,EAAAI,QAAAJ,IAAQ,EACRG,EAAU,SAACE,SACN,IAAAnB,SAAQ,SAACS,EAASG,SACrBI,YAAWP,EAASU,MAEtBD,GAAYD,EAAQ,KACpBjB,QAAQe,cAAcG,GAAUR,KAAK,iBACpCI,IAAQ,IACTI,EAASE,KAAKH,EAAQ,MAEtBD,WAAW,iBACTnB,GAAOiB,GAAOR,GAAGC,OAAM,GACvBM,KACE,MAELV,GAAG,qBAAsB,SAACU,GACzB,GAAAI,GAAAH,EAAAI,QAAAJ,IAAQ,EACRG,EAAU,SAACE,SACN,IAAAnB,SAAQ,SAACS,EAASG,SACrBI,YAAWP,EAASU,MAEtBD,GAAYD,EAAQ,KACpBjB,QAAQe,cAAcG,GAAUR,KAAK,iBACpCI,IAAQ,IACTI,EAASE,KAAKH,EAAQ,IAEtBD,WAAW,iBACTnB,GAAOiB,GAAOR,GAAGC,OAAM,GACvBM,KACE","file":"main.js","sourcesContent":["# gulp build && mocha tests/main.js\nexpect = require('chai').expect\nrequire(\"blanket\")()\n\nglobal.Promise = require('bluebird')\n\nrequire('../dist/main.js')\n\ndescribe(\"Test Suite\", ()->\n\tdescribe(\".later\", ()->\n\t\tdid_run = false\n\t\tit(\"promise callback run\", ()->\n\t\t\tpending_promise = Promise.later ()->\n\t\t\t\tdid_run = true\n\t\t\texpect(did_run).to.equal(true)\n\t\t)\n\t\tit(\"promise unfulfilled\", ()->\n\t\t\tpending_promise = Promise.later (()->)\n\t\t\texpect(pending_promise.isFulfilled()).to.equal(false)\n\t\t)\n\t\tit(\"promise fulfilled\", ()->\n\t\t\tpending_promise = Promise.later (()->)\n\t\t\tpending_promise.resolve('test')\n\t\t\texpect(pending_promise.isFulfilled()).to.equal(true)\n\t\t)\n\n\t\t# doesn't run\n\t\tit(\"promise resolve correct value\", ()->\n\t\t\tpending_promise = Promise.later (()->)\n\t\t\tpending_promise.then (value)->\n\t\t\t\texpect(value).to.equal('test')\n\n\t\t\tpending_promise.resolve('test')\n\t\t)\n\n\t\t# doesn't run\n\t\tit(\"promise reject correct value\", ()->\n\t\t\tpending_promise = Promise.later (()->)\n\t\t\tpending_promise.catch (value)->\n\t\t\t\texpect(value).to.equal('test')\n\t\t\tpending_promise.reject('test')\n\t\t)\n\t)\n\tdescribe(\".expanding_all\", ()->\n\t\tit(\"empty array\", (done)->\n\t\t\tended = false\n\t\t\tPromise.expanding_all([]).then ()->\n\t\t\t\tended = true\n\t\t\tsetTimeout((()->\n\t\t\t\t\texpect(ended).to.equal(true)\n\t\t\t\t\tdone()\n\t\t\t\t), 50)\n\t\t)\n\t\tit(\"expanded unfulfilled\", (done)->\n\t\t\tended = false\n\t\t\tdelayed = (delay)->\n\t\t\t\tnew Promise (resolve, reject)->\n\t\t\t\t\tsetTimeout(resolve, delay)\n\n\t\t\tpromises = [delayed(50)]\n\t\t\tPromise.expanding_all(promises).then ()->\n\t\t\t\tended = true\n\t\t\tpromises.push delayed(500)\n\n\t\t\tsetTimeout((()->\n\t\t\t\t\texpect(ended).to.equal(false)\n\t\t\t\t\tdone()\n\t\t\t\t), 50)\n\t\t)\n\t\tit(\"expanded fulfilled\", (done)->\n\t\t\tended = false\n\t\t\tdelayed = (delay)->\n\t\t\t\tnew Promise (resolve, reject)->\n\t\t\t\t\tsetTimeout(resolve, delay)\n\n\t\t\tpromises = [delayed(40)]\n\t\t\tPromise.expanding_all(promises).then ()->\n\t\t\t\tended = true\n\t\t\tpromises.push delayed(5)\n\n\t\t\tsetTimeout((()->\n\t\t\t\t\texpect(ended).to.equal(true)\n\t\t\t\t\tdone()\n\t\t\t\t), 50)\n\t\t)\n\t)\n)"],"sourceRoot":"/source/"}